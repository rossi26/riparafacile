---
// src/components/Auth.astro (Simplified for Login/Logout with Unified Form)
// Signup is now handled by UnifiedSignupForm.astro and submission-created.js
---
<div id="netlify-identity-auth-container" class="p-4 border border-gray-300 rounded-lg shadow-md bg-white">
  <h2 class="text-xl font-semibold mb-4 text-gray-700">User Authentication</h2>
  <div id="auth-status" class="mb-4 text-gray-600">Loading authentication status...</div>

  {/* Netlify Identity Widget Login/Logout Buttons */}
  <div data-netlify-identity-button class="netlify-identity-button-container space-y-2">
  </div>

  <div id="auth-message" class="mt-3 text-sm"></div>

  <p class="mt-6 text-center text-sm text-gray-600">
    New user? 
    <a href="/signup/" class="font-medium text-blue-600 hover:text-blue-500"> {/* Link to your UnifiedSignupForm page */}
      Create an account
    </a>
  </p>
</div>

<script is:inline>
  // Ensure this script block only initializes once
  if (!window.myAppAuthComponentGlobalInit) {
    window.myAppAuthComponentGlobalInit = true;

    function loadNetlifyIdentityWidget() {
      if (document.getElementById('netlify-identity-widget-script')) {
        if (window.netlifyIdentity) {
          initializeNetlifyIdentity();
        } else {
          console.warn("Auth.astro: Widget script tag found, but widget not initialized. Waiting for 'load'.");
          const scriptTag = document.getElementById('netlify-identity-widget-script');
          // Ensure 'load' listener is only added once if script tag exists but isn't loaded
          if(scriptTag && !scriptTag.dataset.onloadAttached) { 
              scriptTag.addEventListener('load', initializeNetlifyIdentity);
              scriptTag.dataset.onloadAttached = 'true'; // Mark as attached
          } else if (!scriptTag) { // If script tag somehow missing, re-add
            addNetlifyScript();
          }
        }
        return;
      }
      addNetlifyScript();
    }

    function addNetlifyScript() {
      const script = document.createElement('script');
      script.id = 'netlify-identity-widget-script';
      script.src = 'https://identity.netlify.com/v1/netlify-identity-widget.js';
      script.async = true;
      document.head.appendChild(script);
      script.onload = () => {
        console.log("Auth.astro: Netlify Identity Widget script loaded.");
        initializeNetlifyIdentity();
      };
      script.onerror = () => {
          console.error("Auth.astro: Failed to load Netlify Identity Widget script.");
          showAuthMessage("Authentication service script failed to load.", "error");
      };
    }

    function showAuthMessage(message, type = 'info') {
      const messageEl = document.getElementById('auth-message');
      if (messageEl) {
        messageEl.textContent = message;
        messageEl.className = `mt-3 text-sm ${type === 'error' ? 'text-red-500 font-semibold' : (type === 'success' ? 'text-green-600 font-semibold' : 'text-gray-600')}`;
      }
    }

    function updateAuthDisplay(user) {
      const authStatusEl = document.getElementById('auth-status');
      if (authStatusEl) {
        authStatusEl.innerHTML = user ? 
          `Logged in as: <strong class="font-medium">${user.user_metadata?.full_name || user.email}</strong>.` : 
          'You are not logged in. Use the buttons above to log in or sign up.';
      }
      // The "Create an account" link is always visible for users who land here and are not logged in.
      // The Netlify Identity widget buttons will show "Login" or "Signup" as appropriate if the user is not logged in.
    }

    function initializeNetlifyIdentity() {
      // Prevent re-initialization of listeners
      if (window.myAppNetlifyIdentityListenersInitialized) return;
      window.myAppNetlifyIdentityListenersInitialized = true;

      const netlifyIdentity = window.netlifyIdentity;
      if (!netlifyIdentity) {
          console.error("Auth.astro: Netlify Identity widget not available at initializeNetlifyIdentity.");
          showAuthMessage("Authentication service failed to initialize.", "error");
          return;
      }
      
      console.log("Auth.astro: Dispatching netlifyIdentityReady event.");
      window.dispatchEvent(new Event('netlifyIdentityReady'));

      netlifyIdentity.on('init', (user) => {
        console.log('Auth.astro: Netlify Identity init event. User:', user ? user.email : 'None');
        updateAuthDisplay(user);
        if (user && user.token && user.token.access_token) {
          document.dispatchEvent(new CustomEvent('userLoggedIn', { detail: user }));
        } else {
          document.dispatchEvent(new CustomEvent('userLoggedOut'));
        }
      });

      netlifyIdentity.on('login', (user) => {
        console.log('Auth.astro: Netlify Identity login event. User:', user.email);
        updateAuthDisplay(user);
        netlifyIdentity.close(); // Close the widget modal on successful login
        showAuthMessage('Login successful! Welcome back.', 'success');
        if (user.token && user.token.access_token) {
          document.dispatchEvent(new CustomEvent('userLoggedIn', { detail: user }));
        } else {
            console.warn("Auth.astro: Login event fired, but token is missing from user object.");
        }
      });

      netlifyIdentity.on('logout', () => {
        console.log('Auth.astro: Netlify Identity logout event.');
        updateAuthDisplay(null); 
        showAuthMessage('Logged out successfully.', 'info');
        document.dispatchEvent(new CustomEvent('userLoggedOut'));
      });

      netlifyIdentity.on('error', (err) => {
        console.error('Auth.astro: Netlify Identity Error:', err);
        showAuthMessage(`Auth Error: ${err.message || 'An unknown error occurred.'}`, 'error');
        // Do not close the widget automatically on error, so user can see widget's error message.
        // updateAuthDisplay(netlifyIdentity.currentUser()); // Reflect current state if any
      });
      
      netlifyIdentity.on('open', () => {
        console.log('Auth.astro: Netlify Identity modal opened.');
        showAuthMessage('', 'info'); // Clear previous custom messages when modal opens
      });

      // Initial state check
      const currentUser = netlifyIdentity.currentUser();
      console.log("Auth.astro: Initial check for current user:", currentUser ? currentUser.email : 'None');
      updateAuthDisplay(currentUser);
      if (currentUser && currentUser.token && currentUser.token.access_token) {
        document.dispatchEvent(new CustomEvent('userLoggedIn', { detail: currentUser }));
      } else if (!currentUser) {
        document.dispatchEvent(new CustomEvent('userLoggedOut'));
      }
    }
    
    // Start the process
    loadNetlifyIdentityWidget();
  }
</script>
<style>
  .netlify-identity-button-container button { 
    margin-top: 0.5rem; /* Example Tailwind: mt-2 */
  }
</style>
