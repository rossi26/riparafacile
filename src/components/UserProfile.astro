---
// src/components/UserProfile.astro
---
<div id="user-profile-container" class="p-4 border border-gray-300 rounded-lg shadow-md bg-white mt-6 hidden">
  <h3 class="text-lg font-semibold mb-3 text-gray-700">Your Supabase Profile</h3>
  <div id="profile-loading" class="text-gray-500">Loading profile...</div>
  <div id="profile-data" class="hidden space-y-1">
    <p class="text-gray-800"><strong>Email (from Netlify):</strong> <span id="profile-email" class="font-normal text-gray-600"></span></p>
    <p class="text-gray-800"><strong>Username (from Supabase):</strong> <span id="profile-username" class="font-bold text-blue-600"></span></p>
    <p class="text-gray-800"><strong>Netlify User ID:</strong> <span id="profile-netlify-id" class="font-normal text-gray-600 text-xs"></span></p>
    <p class="text-gray-800"><strong>Phone:</strong> <span id="profile-phone" class="font-normal text-gray-600"></span></p>
    <p class="text-gray-800"><strong>Subscription Plan:</strong> <span id="profile-plan" class="font-normal text-gray-600"></span></p>
    <p class="text-gray-800"><strong>Profile Created:</strong> <span id="profile-created-at" class="font-normal text-gray-600 text-xs"></span></p>
    <p class="text-gray-800"><strong>Last Updated:</strong> <span id="profile-updated-at" class="font-normal text-gray-600 text-xs"></span></p>
  </div>
  <div id="profile-error" class="text-red-500 hidden"></div>
</div>

<script is:inline>
  const userProfileContainerEl = document.getElementById('user-profile-container');
  const profileLoadingEl = document.getElementById('profile-loading');
  const profileDataEl = document.getElementById('profile-data');
  const profileErrorEl = document.getElementById('profile-error');
  let isFetchingSupabaseProfile = false; // Flag per prevenire chiamate multiple

  function displaySupabaseProfileData(data) {
    if (!profileDataEl || !userProfileContainerEl) return;
    console.log('UserProfile: Data received by displaySupabaseProfileData:', data);

    document.getElementById('profile-email').textContent = data.email || 'N/A';
    document.getElementById('profile-username').textContent = data.username || 'N/A';
    document.getElementById('profile-netlify-id').textContent = data.netlify_id || 'N/A';
    document.getElementById('profile-phone').textContent = data.phone || 'N/A'; // phone può essere null
    document.getElementById('profile-plan').textContent = data.subscription_plan || 'N/A';
    document.getElementById('profile-created-at').textContent = data.created_at ? new Date(data.created_at).toLocaleString() : 'N/A';
    document.getElementById('profile-updated-at').textContent = data.updated_at ? new Date(data.updated_at).toLocaleString() : 'N/A';
     
    if (profileLoadingEl) profileLoadingEl.classList.add('hidden');
    profileDataEl.classList.remove('hidden');
    if (profileErrorEl) profileErrorEl.classList.add('hidden');
    userProfileContainerEl.classList.remove('hidden');
  }

  function displaySupabaseProfileError(message) {
    if (profileErrorEl && userProfileContainerEl) {
      profileErrorEl.textContent = message;
      profileErrorEl.classList.remove('hidden');
      userProfileContainerEl.classList.remove('hidden'); // Mostra il contenitore per visualizzare l'errore
    }
    if (profileLoadingEl) profileLoadingEl.classList.add('hidden'); // Nascondi il caricamento
    if (profileDataEl) profileDataEl.classList.add('hidden'); // Nascondi i dati del profilo
  }

  async function fetchUserSupabaseProfile() {
    if (isFetchingSupabaseProfile) {
        console.log("UserProfile: Fetch already in progress, skipping.");
        return;
    }
    isFetchingSupabaseProfile = true;
    console.log("UserProfile: Attempting to fetch Supabase profile.");

    if (!window.netlifyIdentity) {
        console.warn("UserProfile: Netlify Identity not available on window. Cannot fetch profile yet.");
        // Non mostrare errore, aspetta che netlifyIdentityReady venga emesso
        isFetchingSupabaseProfile = false;
        return;
    }
    
    const netlifyUser = window.netlifyIdentity.currentUser();

    if (!netlifyUser) {
      console.warn("UserProfile: No Netlify user currently logged in. Hiding profile section.");
      if (userProfileContainerEl) userProfileContainerEl.classList.add('hidden');
      // Non è un errore da mostrare se l'utente è semplicemente sloggato
      isFetchingSupabaseProfile = false;
      return;
    }

    if (!netlifyUser.token || !netlifyUser.token.access_token) {
      console.warn("UserProfile: User exists but token is missing or not ready.");
      displaySupabaseProfileError('Authentication token is not ready. Please wait or log in again.');
      // Lascia il loading visibile, il token potrebbe arrivare
      isFetchingSupabaseProfile = false;
      return;
    }
     
    // Mostra UI di caricamento
    if (userProfileContainerEl) userProfileContainerEl.classList.remove('hidden');
    if (profileLoadingEl) profileLoadingEl.classList.remove('hidden');
    if (profileDataEl) profileDataEl.classList.add('hidden');
    if (profileErrorEl) profileErrorEl.classList.add('hidden');

    try {
      const response = await fetch('/.netlify/functions/get-user-data', {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${netlifyUser.token.access_token}`,
        },
      });

      let responseData;
      try {
        responseData = await response.json();
      } catch (e) {
        console.error('UserProfile: Failed to parse JSON response from get-user-data:', e);
        throw new Error(`Error ${response.status}: ${response.statusText || 'Failed to retrieve data, and response was not valid JSON.'}`);
      }

      if (!response.ok) {
        // L'errore "Unauthorized: You must be logged in..." viene da qui se la funzione Netlify restituisce 401
        console.error(`UserProfile: Error from get-user-data. Status: ${response.status}`, responseData);
        throw new Error(responseData.error || responseData.details || `Error ${response.status}: ${response.statusText}`);
      }
       
      displaySupabaseProfileData(responseData);

    } catch (error) {
      console.error('UserProfile: Error fetching user Supabase profile:', error);
      displaySupabaseProfileError(`Failed to load profile: ${error.message}`);
    } finally {
        isFetchingSupabaseProfile = false;
    }
  }

  function handleUserLoggedIn(event) {
    console.log('UserProfile: userLoggedIn event detected.', event.detail);
    // Non è necessario controllare netlifyIdentity.currentUser() qui, perché l'evento stesso fornisce l'utente.
    // La chiamata a fetchUserSupabaseProfile controllerà il token.
    fetchUserSupabaseProfile();
  }

  function handleUserLoggedOut() {
    console.log('UserProfile: userLoggedOut event detected. Hiding profile.');
    if (userProfileContainerEl) userProfileContainerEl.classList.add('hidden');
    if (profileDataEl) profileDataEl.classList.add('hidden');
    if (profileErrorEl) {
        profileErrorEl.classList.add('hidden');
        profileErrorEl.textContent = ''; // Pulisci errori precedenti
    }
    if (profileLoadingEl) { // Resetta il messaggio di caricamento
        profileLoadingEl.classList.remove('hidden'); 
        profileLoadingEl.textContent = 'Loading profile...';
    }
  }
  
  document.addEventListener('userLoggedIn', handleUserLoggedIn);
  document.addEventListener('userLoggedOut', handleUserLoggedOut);

  document.addEventListener('userProfileUpdated', (event) => {
    console.log('UserProfile: userProfileUpdated event received:', event.detail);
    if (event.detail && event.detail.profile) { 
        displaySupabaseProfileData(event.detail.profile);
    } else if (event.detail && !event.detail.profile && !event.detail.error) {
        console.warn("UserProfile: userProfileUpdated event received data without a 'profile' property. Displaying raw detail:", event.detail);
        displaySupabaseProfileData(event.detail);
    } else if (event.detail && event.detail.error) {
        console.error("UserProfile: userProfileUpdated event indicated an error:", event.detail.error);
        // Potresti voler mostrare un errore qui o lasciare che fetchUserSupabaseProfile lo gestisca
    }
  });
   
  function initialProfileLoadSetup() {
    console.log("UserProfile: Setting up initial profile load logic.");
    if (window.netlifyIdentity && window.netlifyIdentity.currentUser()) {
        console.log("UserProfile (initialSetup): User already logged in via Netlify Identity, fetching profile.");
        fetchUserSupabaseProfile();
    } else if (window.netlifyIdentity) {
        console.log("UserProfile (initialSetup): Netlify Identity loaded, but no current user.");
        handleUserLoggedOut(); // Assicura che il profilo sia nascosto
    } else {
        console.log("UserProfile (initialSetup): Netlify Identity not yet loaded, waiting for 'netlifyIdentityReady'.");
        window.addEventListener('netlifyIdentityReady', () => {
            console.log("UserProfile: netlifyIdentityReady event received.");
            if(window.netlifyIdentity && window.netlifyIdentity.currentUser()){
                fetchUserSupabaseProfile();
            } else {
                handleUserLoggedOut(); // Assicura che il profilo sia nascosto
            }
        }, { once: true });
    }
  }
  
  // Esegui initialProfileLoadSetup quando il DOM è pronto o la pagina è completamente caricata
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initialProfileLoadSetup, {once: true});
  } else {
    initialProfileLoadSetup(); // DOM già pronto o pagina caricata
  }

</script>
